<!--
  This launch file initializes the kobuki with camera and map it in rviz, and detect the marker . 
 -->

<launch>
  <arg name="camera_name" default="logitec" />

 <!--node pkg="rviz" type="rviz" name="rviz" 
    args="-d $(find kobuki_camera)/launch/live_single.rviz"/-->
   
  <!-- the camera link should be the camera frame_id in order to match it with ar_pose-->
  <!--To publish the transform from the camera to the base_link at frequency 10ms-->
  <node pkg="tf" type="static_transform_publisher" name="world_to_cam" 
    args="0 0 0.7 0 0 0 world $(arg camera_name) 10.0" />


  <!--Access the camera publish the camera_info and image_row topics-->
  <node pkg="cv_camera" type="cv_camera_node" name="$(arg camera_name)">
    <param name="frame_id" value="$(arg camera_name)" />
    <param name="device_id" value= "1" />
    <param name="camera_info_url" value="$(find kobuki_camera)/param/camera.yaml"/>
    <param name="rate" value="10.0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
  </node>

  <!-- Node to detect the marker on image plane and estimate the pose -->
  <node pkg="aruco_tool" type="arucoDetectionTopView" name="arucoDetector" output = 'screen'>
    <param name= "image_topic" type = "string" value = "$(arg camera_name)/image_raw" />
    <param name= "marker_topic" type = "string" value = "ar_pose_measurement"/>
    
    <param name="publish_tf" type="bool" value="true"/>
    <param name = 'marker_length' type = 'double' value = '160' />
    <param name= 'camera_cal_path' type = 'string' value="$(find aruco_tool)/Param/camera1.xml"/>
    <param name= 'detector_param_path' type = 'string' value="$(find aruco_tool)/Param/detector_params.yml"/>
    <param name = 'save_data' type = 'bool' value = 'true' />
    <param name = 'save_video' type = 'bool' value = 'true' />
    <param name = 'track_point' type = 'bool' value = 'true' />
    <param name = 'visualize_image' type = 'bool' value = 'true' />
    <param name = 'saved_video_name' type = 'string' value = 'test' />
    <param name= 'image_width' type = 'int' value="640" />
    <param name= 'image_height' type = 'int' value="480" />
    <rosparam param="target_IDs">[1]</rosparam>
  </node>

</launch>
